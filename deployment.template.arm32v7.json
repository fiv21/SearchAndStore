{
  "$schema-template": "1.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "iaepractiacontainerregistry": {
                "username": "$CONTAINER_REGISTRY_USERNAME",
                "password": "$CONTAINER_REGISTRY_KEY",
                "address": "$CONTAINER_REGISTRY_URL"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.0",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.0",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "modules": {
          "FaceDetector": {
            "version": "32.2",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "minNeighborsParam": {
                "value": "$OPENCV_MINNEIGHBORS"
              },
              "scaleFactorParam": {
                "value": "$OPENCV_SCALEFACTOR"
              },
              "debugMode": {
                "value": "$DEBUG_MODE"
              },
              "localTestingLab": {
                "value": "$PRACTIA_LAB"
              },
              "cameraFPS": {
                "value": "$CAMERA_FPSmax"
              },
              "threadsToUse": { 
                "value": "$CPU_THREADS"
              },
              "rtspUser1": {
                "value": "$CAMERA_AUTHCREDENTIALS_USER"
              },
              "rtspPass1": {
                "value": "$CAMERA_AUTHCREDENTIALS_PASSWORD"
              },
              "IPCam1": {
                "value": "$CAMERA_1_IP_ADDRESS"
              },
              "PortCam1": {
                "value": "$CAMERA_PORT"
              },
              "PathCam1": {
                "value": "$CAMERA_STREAMING_PATH"
              },
              "rtspUser2": {
                "value": "$CAMERA_AUTHCREDENTIALS_USER"
              },
              "rtspPass2": {
                "value": "$CAMERA_AUTHCREDENTIALS_PASSWORD"
              },
              "IPCam2": {
                "value": "$CAMERA_2_IP_ADDRESS"
              },
              "PortCam2": {
                "value": "$CAMERA_PORT"
              },
              "PathCam2": {
                "value": "$CAMERA_STREAMING_PATH"
              },
              "connection_string": {
                "value": "$STORAGE_connectionstring"
              },
              "container": {
                "value": "$STORAGE_BLOB_identifier"
              },
              "scheduleKey": {
                "value": "$COSMOSDB_KEY"
              },
              "scheduleUrl": {
                "value": "$COSMOSDB_ENDPOINT"
              },
              "databaseIDCosmosDB": {
                "value": "$COSMOSDB_DATABASE"
              },
              "containerIDCosmosDB": {
                "value": "$COSMOSDB_CONTAINER"
              },
              "SMTPhostAddress": {
                "value": "$SMTP_outgoingserver"
              },
              "SMTPhostPort": {
                "value": "$SMTP_outgoingport"
              },
              "sender_email": {
                "value": "$SMTP_user"
              },
              "senderEmailPassword": {
                "value": "$SMTP_pass"
              },
              "local_connection_string":
              {
                "value": "$STORAGE_LOCAL_connectionstring"
              },
              "local_container":
              {
                "value": "$STORAGE_LOCAL_BLOB_blobstorageidentifier"
              }
            },
            "settings": {
              "image": "${MODULES.FaceDetector.arm32v7}",
              "createOptions": {}
            }
          },
          "LogsModule": {
            "version": "5.5",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.LogsModule.arm32v7}",
              "createOptions": "{\"HostConfig\":{\"PortBindings\":{\"8080/tcp\":[{\"HostPort\":\"8080\"}]}}}"
            }
          },
          "ScheduleNewClass": {
            "version": "7.7",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "value1CamaraIP": {
                "value": "$CAMERA_1_MAC_ADDRESS"
              },
              "value2CamaraIP": {
                "value": "$CAMERA_2_MAC_ADDRESS"
              },
              "scheduleKey": {
                "value": "$COSMOSDB_KEY"
              },
              "scheduleUrl": {
                "value": "$COSMOSDB_ENDPOINT"
              },
              "databaseIDCosmosDB": {
                "value": "$COSMOSDB_DATABASE"
              },
              "containerIDCosmosDB": {
                "value": "$COSMOSDB_CONTAINER"
              }
            },
            "settings": {
              "image": "${MODULES.ScheduleNewClass.arm32v7}",
              "createOptions": "{\"HostConfig\":{\"PortBindings\":{\"8086/tcp\":[{\"HostPort\":\"8086\"}]}}}"
            }
          },
          "blobiniotedgedevice": {
            "version": "5.2",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azure-blob-storage:latest",
              "createOptions": {
                "Env":[
                  "LOCAL_STORAGE_ACCOUNT_NAME=localblobstorage",
                  "LOCAL_STORAGE_ACCOUNT_KEY=aHiEfi3v6rzQizcsWQzUYbv5Vwb4vUfFq01JajUp4sI/ddSZ5fHCQqb6iNdkkjW45JVG6Wdr39K6RMYzmw6L2g=="
                 ],
                 "HostConfig":{
                   "Binds": ["edgeblobvolume:/blobroot"],
                   "PortBindings":{
                     "11002/tcp": [{"HostPort":"11002"}]
                   }
                 }
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "FaceDetectorToIoTHub": "FROM /messages/modules/FaceDetector/outputs/* INTO $upstream",
          "LogsModuleToIoTHub": "FROM /messages/modules/LogsModule/outputs/* INTO $upstream",
          "ScheduleNewClassToIoTHub": "FROM /messages/modules/ScheduleNewClass/outputs/* INTO $upstream",
          "blobiniotedgedeviceToIoTHub": "FROM /messages/modules/blobiniotedgedevice/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "blobiniotedgedevice":
    {
      "properties.desired": {
        "deviceAutoDeleteProperties": {
          "deleteOn": true,
          "deleteAfterMinutes": 14400,
          "retainWhileUploading": true
        },
        "deviceToCloudUploadProperties": {
          "uploadOn": true,
          "uploadOrder": "OldestFirst",
          "cloudStorageConnectionString": "$STORAGE_connectionstring",
          "storageContainersForUpload": {
            "image-frame": {
              "target": "$STORAGE_BLOB_identifier"
            }
          },
          "deleteAfterUpload": true
        }
      }
    }
  }
}